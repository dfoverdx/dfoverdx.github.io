<html>
    <head>
        <script
            src="https://code.jquery.com/jquery-3.2.1.min.js" integrity="sha256-hwg4gsxgFZhOsEEamdOYGBf13FyQuiTwlAQgxVSNgt4=" crossorigin="anonymous"></script>
        <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-BVYiiSIFeK1dGmJRAkycuHAHRg32OmUcww7on3RYdg4Va+PmSTsz/K68vbdEjh4u" crossorigin="anonymous">
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" integrity="sha384-Tc5IQib027qvyjSMfHjOMaLkfuWVxZxUPnCJA7l2mCWNIpG9mGCD8wGNIcPD7Txa" crossorigin="anonymous"></script>
        <style>
            .well a {
                display: block;
            }

            .well {
                white-space: pre-wrap;
            }
        </style>
    </head>
    <body>
        <div class="container">
            <div id="main">
            </div>
        </div>

        <script>
            const lengthLimit = 1500,
                callsLimit = 20;

            let $main,
                numCalls = 0;

            function parsePostId(id) {
                let idx = id.indexOf('_');
                return id.substring(idx + 1);
            }

            function appendPost(postData) {
                let $postDiv = $('<div>'),
                    $postLink = $('<a>');

                $postDiv.addClass('well');
                $postLink.attr('href', 'https://facebook.com/dfoverdx/posts/' + parsePostId(postData.id));
                $postLink.append(postData['created_time']);

                $postDiv.append($postLink).append(postData.message);
                $main.append($postDiv);
            }

            function getPosts(args, res) {
                FB.api('/me/posts', 'get', args, (response) => {
                    res(response);
                });
            }

            function addThen(promise, args) {
                let p = promise.then(() => {
                    return new Promise(res => getPosts(args, res)).then((response) => {
                        response.data.filter(d => d.message && d.message.length > lengthLimit).forEach(appendPost);

                        numCalls++;
                        if (response.paging.next && numCalls < callsLimit) {
                            let until = /until=([^&]+)/g.exec(response.paging.next)[1];
                            args.until = until;
                            addThen(p, args);
                        }
                    });
                });

                return p;
            }

            function run() {
                $main = $('#main');

                let p = Promise.resolve();
                addThen(p, { limit: 250 });
            }

            $(() => {
                $.ajaxSetup({ cache: true });
                $.getScript('https://connect.facebook.net/en_US/sdk.js', function() {
                    FB.init({
                        appId: '722401361110198',
                        version: 'v2.9'
                    });
                    $('#loginbutton,#feedbutton').removeAttr('disabled');
                    FB.getLoginStatus(run);
                });
            });
        </script>
    </body>
</html>